% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/InteRact.R
\name{InteRact}
\alias{InteRact}
\title{Analysis of proteomics data}
\usage{
InteRact(df, Column_gene_name = "Gene.names", Column_score = "Score",
  Column_ID = "Protein.IDs", Column_Npep = NULL, bait_gene_name,
  N_rep = 3, quantile_rep = 0.05, bckg_bait = bait_gene_name,
  bckg_ctrl = "WT", bckg = NULL, time = NULL, bio = NULL, tech = NULL,
  Column_intensity_pattern = "^Intensity.", preffix_bio = "S",
  preffix_tech = "R", preffix_time = "", filter_time = NULL,
  filter_bio = NULL, filter_tech = NULL, updateProgress = NULL,
  pool_background = TRUE, log = TRUE, by_conditions = TRUE)
}
\arguments{
\item{df}{A dataframe containing protein intensities. By default, protein intensity column names start by "Intensity." 
(use parameter \code{Column_intensity_pattern} to change)}

\item{Column_gene_name}{Column with gene names}

\item{Column_score}{Column with protein identification score}

\item{Column_ID}{Column with protein IDs}

\item{Column_Npep}{Column with number of theoretically observable peptides per protein}

\item{bait_gene_name}{The gene name of the bait}

\item{N_rep}{number of iterations for the replacement of missing values
(if \code{Nrep}=0, missing values are not replaced)}

\item{quantile_rep}{Quantile of control background intensities used to replace missing values}

\item{bckg_bait}{Τhe name of the bait found in \code{bckg} (see below) or in df's names if \code{bckg} is not provided}

\item{bckg_ctrl}{Τhe name of the control background found in \code{bckg} (see below) or in df's names if \code{bckg} is not provided}

\item{bckg}{Vector of length equal to the number of protein intensity columns indicating which background a column refers to 
(containing either  \code{bckg_bait} or  \code{bckg_ctrl} )}

\item{time}{Vector of length equal to the number of protein intensity columns indicating experimental conditions
(for instance time of stimulation)}

\item{bio}{Vector of length equal to the number of protein intensity columns indicating biological replicates}

\item{tech}{Vector of length equal to the number of protein intensity columns indicating technical replicates}

\item{Column_intensity_pattern}{Pattern (regular exrpression) used to identfy df's columns containing protein intensity values}

\item{preffix_bio}{Preffix for biological replicates in column names (i.e "S" if pattern is "_S1")}

\item{preffix_tech}{Preffix for technical replicates in column names (i.e "R" if pattern is "_R3")}

\item{preffix_time}{Preffix for experimental conditions in column names (i.e "t" if pattern is "_t300")}

\item{filter_time}{vector of experimental conditions to exclude from analysis}

\item{filter_bio}{vector of biological replicates to exclude from analysis}

\item{filter_tech}{vector of technical replicates to exclude from analysis}

\item{updateProgress}{function to show progress bar in shiny app}

\item{pool_background}{option to use all control background conditions as one control group for all conditions}

\item{log}{option to perform t-test and averages on log transform intensities}

\item{by_conditions}{option to perform the comparison between bait and control group for each condition}
}
\value{
a object of class \code{Interactome}, i.e a list including the following elements :

\code{conditions} : a vector of experimental conditions.

\code{names} : a vector of names (by default gene names are used).

\code{p_val} : a list of vectors containing the p values associated to each experimental condition.

\code{fold_change} : a list of vectors containing the fold change associated to each experimental condition.

\code{...} : other variables.
}
\description{
This package implements several functions to analyze Affinity Purification data.
}
\details{
By default, it is configured to work with proteinGroups.txt files
generated by MaxQuant
}
\examples{
#load data :
dir<- system.file("extdata", package = "InteRact")
path <- paste(dir,"/proteinGroups_Cbl.txt",sep="")
df <- read.csv(path, sep="\\t", nrows=-1, fill=TRUE, na.strings="", dec=".")
#Run InteRact with default parameters
res <- InteRact(df, bait_gene_name = "Cbl")
Interactome <- res$Interactome
#You now have an \\code{InteRactome}. See its elements.
names(Interactome)
#Visualize results
plot(Interactome)
plot_volcanos(Interactome, show_plot = TRUE )
#Create a summary data frame
sum_tbl_2 <- summary_table(Interactome)
# Check which columns have been used along with their description
print.data.frame(res$cond)
# Identify interactors
Interactome <- identify_interactors(Interactome, p_val_thresh = 0.05, fold_change_thresh = 2)
# Append protein abundance
Interactome <- merge_proteome(Interactome)
# Order proteins in Interactome
order_list <- get_order_discrete(Interactome)
Interactome <- order_interactome(Interactome, order_list$idx_order)
# Append annotations
annot <- get_annotations(Interactome)
Interactome <- append_annotations(Interactome,  annot)
#Check the new summary data frame
sum_tbl_2 <- summary_table(Interactome)
}
\author{
Guillaume Voisinne
}
